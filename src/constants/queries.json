{
    "BanStreamChatUser": "mutation BanStreamChatUser($streamer: String!, $username: String!) { streamchatUserBan(streamer: $streamer, username: $username) { err { code message __typename } __typename } }",
    "UnbanStreamChatUser": "mutation UnbanStreamChatUser($streamer: String!, $username: String!) { streamchatUserUnban(streamer: $streamer, username: $username) { err { code message __typename } __typename } }",
    "BrowsePageSearchCategory": "query BrowsePageSearchCategory($text: String!, $first: Int, $after: String) { search(text: $text) { trendingCategories(first: $first, after: $after) { ...HomeCategoriesFrag __typename } __typename } } fragment HomeCategoriesFrag on CategoryConnection { pageInfo { endCursor hasNextPage __typename } list { ...VCategoryCardFrag __typename } __typename } fragment VCategoryCardFrag on Category { id backendID title imgUrl watchingCount __typename }",
    "DeleteChat": "mutation DeleteChat($streamer: String!, $id: String!) { chatDelete(streamer: $streamer, id: $id) { err { code message __typename } __typename } }",
    "FollowUser": "mutation FollowUser($streamer:String!) { follow(streamer:$streamer) { err { code message __typename } __typename } }",
    "UnfollowUser": "mutation UnfollowUser($streamer:String!){ unfollow(streamer:$streamer) { err { code message __typename } __typename } }",
    "GlobalInformation": "query GlobalInformation {\n  globalInfo {\n    languages {\n      id\n      backendID\n      language\n      code\n      __typename\n    }\n    __typename\n  }\n}\n",
    "HomePageLeaderboard": "query HomePageLeaderboard { leaderboard { ...LeaderboardFrag __typename } } fragment LeaderboardFrag on LeaderboardConnection { list { user { displayname wallet { lastDayEarning __typename } ...VDliveAvatarFrag ...VDliveNameFrag __typename } change __typename } __typename } fragment VDliveAvatarFrag on User { avatar __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename }",
    "HomePageLivestream": "query HomePageLivestream($first: Int, $after: String, $languageID: Int, $categoryID: Int, $showNSFW: Boolean, $userLanguageCode: String) { livestreams(input: {first: $first, after: $after, languageID: $languageID, categoryID: $categoryID, showNSFW: $showNSFW, order: TRENDING, userLanguageCode: $userLanguageCode}) { ...VCategoryLivestreamFrag __typename } } fragment VCategoryLivestreamFrag on LivestreamConnection { pageInfo { endCursor hasNextPage __typename } list { permlink ageRestriction ...VLivestreamSnapFrag __typename } __typename } fragment VLivestreamSnapFrag on Livestream { id creator { username displayname ...VDliveAvatarFrag ...VDliveNameFrag __typename } title totalReward watchingCount thumbnailUrl lastUpdatedAt __typename } fragment VDliveAvatarFrag on User { avatar __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename }",
    "MeGlobal": "query MeGlobal { me { ...MeGlobalFrag __typename } } fragment MeGlobalFrag on User { id username ...VDliveAvatarFrag displayname partnerStatus role private { accessToken insecure email phone nextDisplayNameChangeTime language showSubSettingTab __typename } ...SettingsSubscribeFrag __typename } fragment VDliveAvatarFrag on User { avatar __typename } fragment SettingsSubscribeFrag on User { id subSetting { badgeColor badgeText textColor __typename } __typename }",
    "MeDashboard": "query MeDashboard($isLoggedIn: Boolean!) { me { ...MeDashboardFrag __typename } } fragment MeDashboardFrag on User { id ...DashboardStreamSettingsFrag ...DashboardHostSettingFrag ...DashboardStatsFrag ...DashboardStreamChatroomFrag __typename } fragment DashboardStreamSettingsFrag on User { livestream { id permlink ...VVideoPlayerFrag __typename } hostingLivestream { id permlink creator { username ...VDliveAvatarFrag ...VDliveNameFrag __typename } ...VVideoPlayerFrag __typename } private { streamTemplate { title ageRestriction thumbnailUrl disableAlert category { id backendID title __typename } language { id backendID code language __typename } __typename } filterWords __typename } __typename } fragment VVideoPlayerFrag on Livestream { disableAlert category { id title __typename } language { language __typename } __typename } fragment VDliveAvatarFrag on User { avatar __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename } fragment DashboardHostSettingFrag on User { id hostingLivestream { creator { username ...VDliveAvatarFrag ...VDliveNameFrag __typename } __typename } __typename } fragment DashboardStatsFrag on User { id livestream { watchingCount totalReward __typename } followers { totalCount __typename } private { subscribers { totalCount __typename } __typename } wallet { totalEarning __typename } __typename } fragment DashboardStreamChatroomFrag on User { ...MeLivestreamChatroomFrag __typename } fragment MeLivestreamChatroomFrag on User { id username role ...MeEmoteFrag __typename } fragment MeEmoteFrag on User { id role @include(if: $isLoggedIn) emote { ...EmoteMineFrag ...EmoteChannelFrag __typename } __typename } fragment EmoteMineFrag on AllEmotes { mine { list { name username sourceURL mimeType level type __typename } __typename } __typename } fragment EmoteChannelFrag on AllEmotes { channel { list { name username sourceURL mimeType level type __typename } __typename } __typename }",
    "MeLivestream": "query MeLivestream($isLoggedIn: Boolean!) { me { ...MeLivestreamFrag __typename } } fragment MeLivestreamFrag on User { id ...MeLivestreamChatroomFrag __typename } fragment MeLivestreamChatroomFrag on User { id username role ...MeEmoteFrag __typename } fragment MeEmoteFrag on User { id role @include(if: $isLoggedIn) emote { ...EmoteMineFrag ...EmoteChannelFrag __typename } __typename } fragment EmoteMineFrag on AllEmotes { mine { list { name username sourceURL mimeType level type __typename } __typename } __typename } fragment EmoteChannelFrag on AllEmotes { channel { list { name username sourceURL mimeType level type __typename } __typename } __typename }",
    "MeBalance": "query MeBalance { me { ...MeBalanceFrag __typename } } fragment MeBalanceFrag on User { id wallet { balance __typename } __typename }",
    "MeSubscribing": "query MeSubscribing($first: Int!, $after: String) { me { ...MeSubscribingFrag __typename } } fragment MeSubscribingFrag on User { id private { subscribing(first: $first, after: $after) { totalCount pageInfo { startCursor endCursor hasNextPage hasPreviousPage __typename } list { streamer { username displayname avatar partnerStatus __typename } tier status lastBilledDate subscribedAt month __typename } __typename } __typename } __typename }",
    "MePartnerProgress": "query MePartnerProgress { me { ...MePartnerProgressFrag __typename } } fragment MePartnerProgressFrag on User { id followers { totalCount __typename } private { previousStats { partnerStats { streamingHours streamingDays donationReceived __typename } contentBonus __typename } partnerProgress { partnerStatus current { followerCount streamingHours streamingDays donationReceived lockPoint __typename } target { followerCount streamingHours streamingDays donationReceived lockPoint __typename } eligible __typename } __typename } __typename }",
    "FollowingPageLivestreams": "query FollowingPageLivestreams($first: Int, $after: String) { livestreamsFollowing(first: $first, after: $after) { ...FollowingLivestreamsFrag __typename } } fragment FollowingLivestreamsFrag on LivestreamConnection { pageInfo { endCursor hasNextPage __typename } list { ...VLivestreamSnapFrag __typename } __typename } fragment VLivestreamSnapFrag on Livestream { id creator { username displayname ...VDliveAvatarFrag ...VDliveNameFrag __typename } title totalReward watchingCount thumbnailUrl lastUpdatedAt __typename } fragment VDliveAvatarFrag on User { avatar __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename }",
    "FollowingPageVideos": "query FollowingPageVideos($first: Int, $after: String) { videosFollowing(first: $first, after: $after) { ...FollowingVideosFrag __typename } } fragment FollowingVideosFrag on VideoConnection { pageInfo { endCursor hasNextPage __typename } list { ...FollowingVideosSnapFrag __typename } __typename } fragment FollowingVideosSnapFrag on Video { creator { username displayname ...VDliveNameFrag __typename } permlink title totalReward thumbnailUrl createdAt viewCount length __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename }",
    "LivestreamPage": "query LivestreamPage($displayname: String!, $add: Boolean!, $isLoggedIn: Boolean!) {\n  userByDisplayName(displayname: $displayname) {\n    id\n    ...VDliveAvatarFrag\n    ...VDliveNameFrag\n    ...VFollowFrag\n    ...VSubscriptionFrag\n    banStatus\n    about\n    avatar\n    myRoomRole @include(if: $isLoggedIn)\n    isMe @include(if: $isLoggedIn)\n    isSubscribing @include(if: $isLoggedIn)\n    livestream {\n      id\n      permlink\n      watchTime(add: $add)\n      ...LivestreamInfoFrag\n      ...VVideoPlayerFrag\n      __typename\n    }\n    hostingLivestream {\n      id\n      creator {\n        ...VDliveAvatarFrag\n        displayname\n        username\n        __typename\n      }\n      ...VVideoPlayerFrag\n      __typename\n    }\n    ...LivestreamProfileFrag\n    __typename\n  }\n}\n\nfragment LivestreamInfoFrag on Livestream {\n  category {\n    title\n    imgUrl\n    id\n    backendID\n    __typename\n  }\n  title\n  watchingCount\n  totalReward\n  ...VDonationGiftFrag\n  ...VPostInfoShareFrag\n  __typename\n}\n\nfragment VDonationGiftFrag on Post {\n  permlink\n  creator {\n    username\n    __typename\n  }\n  __typename\n}\n\nfragment VPostInfoShareFrag on Post {\n  permlink\n  title\n  content\n  category {\n    id\n    backendID\n    title\n    __typename\n  }\n  __typename\n}\n\nfragment VDliveAvatarFrag on User {\n  avatar\n  __typename\n}\n\nfragment VDliveNameFrag on User {\n  displayname\n  partnerStatus\n  __typename\n}\n\nfragment LivestreamProfileFrag on User {\n  isMe @include(if: $isLoggedIn)\n  canSubscribe\n  private @include(if: $isLoggedIn) {\n    subscribers {\n      totalCount\n      __typename\n    }\n    __typename\n  }\n  videos {\n    totalCount\n    __typename\n  }\n  pastBroadcasts {\n    totalCount\n    __typename\n  }\n  followers {\n    totalCount\n    __typename\n  }\n  following {\n    totalCount\n    __typename\n  }\n  ...ProfileAboutFrag\n  __typename\n}\n\nfragment ProfileAboutFrag on User {\n  id\n  about\n  __typename\n}\n\nfragment VVideoPlayerFrag on Livestream {\n  disableAlert\n  category {\n    id\n    title\n    __typename\n  }\n  language {\n    language\n    __typename\n  }\n  __typename\n}\n\nfragment VFollowFrag on User {\n  id\n  username\n  displayname\n  isFollowing @include(if: $isLoggedIn)\n  isMe @include(if: $isLoggedIn)\n  followers {\n    totalCount\n    __typename\n  }\n  __typename\n}\n\nfragment VSubscriptionFrag on User {\n  id\n  username\n  displayname\n  isSubscribing @include(if: $isLoggedIn)\n  canSubscribe\n  isMe @include(if: $isLoggedIn)\n  __typename\n}\n",
    "LivestreamProfileFollowers": "query LivestreamProfileFollowers($displayname: String!, $sortedBy: RelationSortOrder, $first: Int, $after: String, $isLoggedIn: Boolean!) {\n userByDisplayName(displayname: $displayname) {\n id\n displayname\n followers(sortedBy: $sortedBy, first: $first, after: $after) {\n pageInfo {\n endCursor\n hasNextPage\n __typename\n }\n list {\n ...VDliveAvatarFrag\n ...VDliveNameFrag\n ...VFollowFrag\n __typename\n }\n __typename\n }\n __typename\n }\n}\n\nfragment VDliveAvatarFrag on User {\n avatar\n __typename\n}\n\nfragment VDliveNameFrag on User {\n displayname\n partnerStatus\n __typename\n}\n\nfragment VFollowFrag on User {\n id\n username\n displayname\n isFollowing @include(if: $isLoggedIn)\n isMe @include(if: $isLoggedIn)\n followers {\n totalCount\n __typename\n }\n __typename\n}\n",
    "LivestreamProfileReplay": "query LivestreamProfileReplay($displayname: String!, $first: Int, $after: String) { userByDisplayName(displayname: $displayname) { id pastBroadcasts(first: $first, after: $after) { pageInfo { endCursor hasNextPage __typename } list { ...ProfileReplaySnapFrag __typename } __typename } username __typename } } fragment ProfileReplaySnapFrag on PastBroadcast { permlink thumbnailUrl title totalReward createdAt viewCount playbackUrl creator { displayname __typename } __typename }",
    "LivestreamProfileVideo": "query LivestreamProfileVideo($displayname: String!, $sortedBy: VideoSortOrder, $first: Int, $after: String) { userByDisplayName(displayname: $displayname) { id videos(sortedBy: $sortedBy, first: $first, after: $after) { pageInfo { endCursor hasNextPage __typename } list { ...ProfileVideoSnapFrag __typename } __typename } username __typename } } fragment ProfileVideoSnapFrag on Video { permlink thumbnailUrl title totalReward createdAt viewCount length creator { displayname __typename } __typename }",
    "LivestreamProfileWallet": "query LivestreamProfileWallet($displayname: String!, $first: Int, $after: String, $isLoggedIn: Boolean!) { userByDisplayName(displayname: $displayname) { id username displayname isMe @include(if: $isLoggedIn) wallet { balance totalEarning __typename } transactions(first: $first, after: $after) { totalCount pageInfo { startCursor endCursor hasNextPage hasPreviousPage __typename } list { seq txType createdAt description amount balance __typename } __typename } __typename } }",
    "LivestreamTreasureChestWinners": "query LivestreamTreasureChestWinners($displayname: String!,$isLoggedIn: Boolean!) { userByDisplayName(displayname:$displayname) { id ...TreasureChestWinnersFrag __typename } } fragment TreasureChestWinnersFrag on User{ id username isMe @include(if:$isLoggedIn) treasureChest{ lastGiveawayWin @include(if:$isLoggedIn) lastGiveawayWinners { value user { ...VDliveAvatarFrag displayname __typename } __typename } __typename } __typename } fragment VDliveAvatarFrag on User { avatar __typename }",
    "SendStreamChatMessage": "mutation SendStreamChatMessage($input: SendStreamchatMessageInput!) { sendStreamchatMessage(input: $input) { err { code __typename } message { type ... on ChatText { id content ...VStreamChatSenderInfoFrag __typename } __typename } __typename } } fragment VStreamChatSenderInfoFrag on SenderInfo { subscribing role roomRole sender { id username displayname avatar partnerStatus __typename } __typename }",
    "StreamChatModerators": "query StreamChatModerators($displayname: String!, $first: Int, $after: String, $search: String) { userByDisplayName(displayname: $displayname) { id chatModerators(first: $first, after: $after, search: $search) { pageInfo { endCursor hasNextPage __typename } list { username ...VDliveAvatarFrag ...VDliveNameFrag __typename } __typename } __typename } } fragment VDliveAvatarFrag on User { avatar __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename }",
    "StreamChatBannedUsers": "query StreamChatBannedUsers($displayname: String!, $first: Int, $after: String, $search: String) { userByDisplayName(displayname: $displayname) { id chatBannedUsers(first: $first, after: $after, search: $search) { pageInfo { endCursor hasNextPage __typename } list { username ...VDliveAvatarFrag ...VDliveNameFrag __typename } __typename } __typename } } fragment VDliveAvatarFrag on User { avatar __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename }",
    "SearchPage": "query SearchPage($text: String!, $first: Int, $after: String, $isLoggedIn: Boolean!) { search(text: $text) { ...SearchFrag __typename } } fragment SearchFrag on SearchResult { users(first: $first, after: $after) { ...SearchUsersFrag __typename } livestreams(first: $first, after: $after) { list { ...SearchItemLivestreamFrag __typename } __typename } videos(first: $first, after: $after) { list { ...SearchItemVideoFrag __typename } __typename } __typename } fragment SearchItemLivestreamFrag on Livestream { creator { ...VDliveNameFrag __typename } title totalReward watchingCount thumbnailUrl __typename } fragment VDliveNameFrag on User { displayname partnerStatus __typename } fragment SearchItemVideoFrag on VideoPB { ... on Video { creator { ...VDliveNameFrag __typename } permlink title totalReward thumbnailUrl createdAt viewCount length content __typename } ... on PastBroadcast { creator { ...VDliveNameFrag __typename } permlink title totalReward thumbnailUrl createdAt viewCount length content __typename } __typename } fragment SearchUsersFrag on UserConnection { list { displayname avatar ...VFollowFrag __typename } __typename } fragment VFollowFrag on User { id username displayname isFollowing @include(if: $isLoggedIn) isMe @include(if: $isLoggedIn) followers { totalCount __typename } __typename }",
    "TopContributors": "query TopContributors($displayname: String!, $rule: ContributionSummaryRule, $first: Int, $after: String, $queryStream: Boolean!) {\n  userByDisplayName(displayname: $displayname) {\n    id\n    ...TopContributorsOfStreamerFrag @skip(if: $queryStream)\n    livestream @include(if: $queryStream) {\n      ...TopContributorsOfLivestreamFrag\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment TopContributorsOfStreamerFrag on User {\n  id\n  topContributions(rule: $rule, first: $first, after: $after) {\n    pageInfo {\n      endCursor\n      hasNextPage\n      __typename\n    }\n    list {\n      amount\n      contributor {\n        id\n        ...VDliveNameFrag\n        ...VDliveAvatarFrag\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment VDliveNameFrag on User {\n  displayname\n  partnerStatus\n  __typename\n}\n\nfragment VDliveAvatarFrag on User {\n  avatar\n  __typename\n}\n\nfragment TopContributorsOfLivestreamFrag on Livestream {\n  id\n  topContributions(first: $first, after: $after) {\n    pageInfo {\n      endCursor\n      hasNextPage\n      __typename\n    }\n    list {\n      amount\n      contributor {\n        id\n        ...VDliveNameFrag\n        ...VDliveAvatarFrag\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"
}